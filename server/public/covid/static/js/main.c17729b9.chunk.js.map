{"version":3,"sources":["DataIndicator/DataIndicator.js","CountryPicker/CountryPicker.js","Chart/Chart.js","Api/index.js","App.js","index.js","image/covid-19.png"],"names":["DataIndicator","indicateData","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","date","currentCountry","className","Card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toLocaleDateString","CountryPicker","countries","changeCountry","useState","selectValue","setSelectValue","FormControl","style","width","NativeSelect","onChange","e","target","value","map","name","slug","key","Chart","data","dates","setDates","confirmeds","setConfirmed","recovereds","setRecovereds","deaths","setDeaths","useEffect","dateArr","confirmedArr","recoveredArr","deathArr","forEach","Confirmed","Recovered","Deaths","push","slice","labels","datasets","label","fill","backgroundColor","fetchCountries","a","fetch","then","res","json","country","Country","Slug","sort","b","fetchDailyGlobalData","Global","fetchByCountry","day","fetchGlobalChartData","totalConfirmed","totalRecovered","total","reportDate","THEME","createMuiTheme","typography","fontFamily","fontSize","App","setCurrentCountry","chartData","setChartData","globalChartData","setGlobalChartData","setCountries","globalData","setGlobalData","setIndicateData","Promise","all","fetchedCountries","fetchedDailyGlobalData","fetchedGlobalChartData","setToGlobal","fetchedCountryData","length","alert","foundCountry","find","item","today","yesterday","theme","src","covid19","alt","Skeleton","height","margin","marginBottom","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4RA0FeA,MArFf,YAWI,IAAD,IAVDC,aACEC,EASD,EATCA,aACAC,EAQD,EARCA,eACAC,EAOD,EAPCA,UACAC,EAMD,EANCA,YACAC,EAKD,EALCA,aACAC,EAID,EAJCA,eACAC,EAGD,EAHCA,KAEFC,EACC,EADDA,eAEA,OACE,yBAAKC,UAAU,iBACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,aACd,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,gBAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CACEC,MAAO,EACPC,IAAKf,EACLgB,SAAU,EACVC,UAAU,IACVL,cAAY,KAIhB,kBAACF,EAAA,EAAD,CAAYC,MAAM,iBAAlB,gBACA,kBAACD,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKhB,EAAciB,SAAU,EAAGC,UAAU,OAE/D,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIO,KAAKb,GAAMc,sBAElB,kBAACT,EAAA,EAAD,KAAaJ,GAAkB,eAA/B,4DAGJ,kBAACE,EAAA,EAAD,CAAMD,UAAU,YACd,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,gBAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CACEC,MAAO,EACPC,IAAKX,EACLY,SAAU,EACVC,UAAU,OAGd,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAlB,gBACA,kBAACD,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKZ,EAAca,SAAU,EAAGC,UAAU,OAE/D,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIO,KAAKb,GAAMc,sBAElB,kBAACT,EAAA,EAAD,KAAaJ,GAAkB,eAA/B,4DAGJ,kBAACE,EAAA,EAAD,CAAMD,UAAU,SACd,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,gBAIA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKb,EAAac,SAAU,EAAGC,UAAU,OAE9D,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAlB,gBACA,kBAACD,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKd,EAAWe,SAAU,EAAGC,UAAU,OAE5D,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIO,KAAKb,GAAMc,sBAElB,kBAACT,EAAA,EAAD,KAAaJ,GAAkB,eAA/B,8D,0BC1DKc,MArBf,YAAsD,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,cAAiB,EACbC,mBAAS,UADI,mBAC5CC,EAD4C,KAC/BC,EAD+B,KAEnD,OACE,yBAAKlB,UAAU,iBACb,kBAACmB,EAAA,EAAD,CAAaC,MAAO,CAAEC,MAAO,SAC3B,kBAACC,EAAA,EAAD,CACEC,SAAU,SAAAC,GAAC,OAAIT,EAAcS,EAAEC,OAAOC,MAAOR,IAC7CQ,MAAOT,GAEP,4BAAQS,MAAM,UAAd,gBACCZ,EAAUa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACb,4BAAQC,IAAKD,EAAMH,MAAOG,GACvBD,U,gBC2CAG,MAvDf,YAA0B,IAATC,EAAQ,EAARA,KAAQ,EACGhB,mBAAS,IADZ,mBAChBiB,EADgB,KACTC,EADS,OAEYlB,mBAAS,IAFrB,mBAEhBmB,EAFgB,KAEJC,EAFI,OAGapB,mBAAS,IAHtB,mBAGhBqB,EAHgB,KAGJC,EAHI,OAIKtB,mBAAS,IAJd,mBAIhBuB,EAJgB,KAIRC,EAJQ,KAqBvB,OAhBAC,qBAAU,WACR,IAAIC,EAAU,GACZC,EAAe,GACfC,EAAe,GACfC,EAAW,GACbb,EAAKc,SAAQ,YAA6C,IAA1ChD,EAAyC,EAAzCA,KAAMiD,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC1CP,EAAQQ,KAAK,IAAIvC,KAAKb,GAAMc,qBAAqBuC,MAAM,GAAG,IAC1DR,EAAaO,KAAKH,GAClBH,EAAaM,KAAKF,GAClBH,EAASK,KAAKD,MAEhBf,EAASQ,GACTN,EAAaO,GACbL,EAAcM,GACdJ,EAAUK,KACT,CAACb,IAEF,yBAAKhC,UAAU,SACb,kBAAC,IAAD,CACEgC,KAAM,CAEJoB,OAAOnB,EACPoB,SAAS,CACP,CACEC,MAAO,eACPC,MAAM,EACNvB,KAAMG,EACNqB,gBAAiB,oBAEnB,CACEF,MAAO,eACPC,MAAM,EACNvB,KAAMK,EACNmB,gBAAiB,oBAEnB,CACEF,MAAO,eACPC,MAAM,EACNvB,KAAMO,EACNiB,gBAAiB,0B,0BChDlBC,EAAc,uCAAG,sBAAAC,EAAA,sEACfC,MAAM,wCAChBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5B,GAAI,OACRA,EACGL,KAAI,SAAAoC,GACH,MAAO,CAAEnC,KAAMmC,EAAQC,QAASnC,KAAMkC,EAAQE,SAE/CC,MAAK,SAACR,EAAGS,GACR,OAAIT,EAAE9B,KAAOuC,EAAEvC,MAAc,EACpB8B,EAAE9B,KAAOuC,EAAEvC,KAAa,EAC1B,QAXa,mFAAH,qDAgBdwC,EAAoB,uCAAG,sBAAAV,EAAA,sEACrBC,MAAM,sCAChBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5B,GAAI,MAAK,CACbxC,aAAcwC,EAAKqC,OAAO7E,aAC1BC,eAAgBuC,EAAKqC,OAAO5E,eAC5BC,UAAWsC,EAAKqC,OAAO3E,UACvBC,YAAaqC,EAAKqC,OAAO1E,YACzBC,aAAcoC,EAAKqC,OAAOzE,aAC1BC,eAAgBmC,EAAKqC,OAAOxE,eAC5BC,KAAMkC,EAAKrB,SAVmB,mFAAH,qDAcpB2D,EAAc,uCAAG,WAAMP,GAAN,SAAAL,EAAA,sEACfC,MAAM,4CAAD,OAA6CI,IAC5DH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5B,GAAI,OACRA,EAAKL,KAAI,SAAA4C,GAAG,MAAK,CACfxB,UAAWwB,EAAIxB,UACfE,OAAQsB,EAAItB,OACZD,UAAWuB,EAAIvB,UACflD,KAAMyE,EAAI5D,YARY,mFAAH,sDAYd6D,EAAoB,uCAAG,sBAAAd,EAAA,sEACrBC,MAAM,wCAChBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA5B,GAAI,OAAIA,EAAKL,KAAI,SAAA4C,GAAG,MAAK,CAC7BxB,UAAWwB,EAAIE,eACfzB,UAAWuB,EAAIG,eACfzB,OAAQsB,EAAIhC,OAAOoC,MACnB7E,KAAMyE,EAAIK,kBAPoB,mFAAH,qDC1B3BC,EAAQC,YAAe,CAC3BC,WAAY,CACVC,WAAY,MACZC,SAAU,MA2GCC,MAvGf,WAAgB,IAAD,EAC+BlE,mBAAS,IADxC,mBACNjB,EADM,KACUoF,EADV,OAEqBnE,mBAAS,IAF9B,mBAENoE,EAFM,KAEKC,EAFL,OAGiCrE,mBAAS,IAH1C,mBAGNsE,EAHM,KAGWC,EAHX,OAIqBvE,mBAAS,IAJ9B,mBAINF,EAJM,KAIK0E,EAJL,OAKuBxE,mBAAS,IALhC,mBAKNyE,EALM,KAKMC,EALN,OAM2B1E,mBAAS,IANpC,mBAMNzB,EANM,KAMQoG,EANR,KAOblD,qBAAU,WACR,sBAAC,oCAAAiB,EAAA,sEAKWkC,QAAQC,IAAI,CACpBpC,IACAW,IACAI,MARH,mCAEGsB,EAFH,KAGGC,EAHH,KAIGC,EAJH,KAUCR,EAAaM,GACbJ,EAAcK,GACdJ,EAAgBI,GAChBR,EAAmBS,GACnBX,EAAaW,GAdd,2CAAD,KAgBC,IAEH,IAAMC,EAAc,SAAA/E,GAClBA,EAAe,UACfiE,EAAkB,IAClBQ,EAAgBF,GAChBJ,EAAaC,IAGTvE,EAAa,uCAAG,WAAOgD,EAAS7C,GAAhB,qBAAAwC,EAAA,yDACJ,WAAZK,EADgB,yCAEXkC,EAAY/E,IAFD,uBAIaoD,EAAeP,GAJ5B,aAIdmC,EAJc,QAKGC,OAAS,GALZ,uBAMlBF,EAAY/E,GANM,kBAOXkF,MAAM,qDAPK,OAUpBf,EAAaa,GAEPG,EAAevF,EAAUwF,MAAK,SAAAC,GAAI,OAAIA,EAAK1E,OAASkC,KAC1DoB,EAAkBkB,EAAazE,MAC/BV,EAAemF,EAAaxE,MACtB2E,EAAQN,EAAmBA,EAAmBC,OAAS,GACvDM,EAAYP,EAAmBA,EAAmBC,OAAS,GACjER,EAAgB,CACdnG,aAAcgH,EAAMzD,UAAY0D,EAAU1D,UAC1CtD,eAAgB+G,EAAMzD,UACtBrD,UAAW8G,EAAMvD,OAASwD,EAAUxD,OACpCtD,YAAa6G,EAAMvD,OACnBrD,aAAc4G,EAAMxD,UAAYyD,EAAUzD,UAC1CnD,eAAgB2G,EAAMxD,UACtBlD,KAAM0G,EAAM1G,OAxBM,4CAAH,wDA4BnB,OACE,kBAAC,IAAD,CAAkB4G,MAAO7B,GACvB,yBAAK7E,UAAU,OACZT,EAAaC,aACZ,oCACE,yBAAKmH,IAAKC,IAASC,IAAI,aACvB,kBAAC,EAAD,CACEtH,aAAcA,EACdQ,eAAgBA,IAElB,kBAAC,EAAD,CACEe,UAAWA,EACXC,cAAeA,IAEjB,kBAAC,EAAD,CAAOiB,KAAMoD,KAGf,yBAAKpF,UAAU,iBACb,kBAAC8G,EAAA,EAAD,CACExG,QAAQ,OACRe,MAAM,OACN0F,OAAO,QACP3F,MAAO,CAAE4F,OAAQ,YAEnB,yBAAKhH,UAAU,QAAQoB,MAAO,CAAE6F,aAAc,SAC5C,kBAACH,EAAA,EAAD,CAAUxG,QAAQ,OAAOyG,OAAO,UAChC,kBAACD,EAAA,EAAD,CAAUxG,QAAQ,OAAOyG,OAAO,UAChC,kBAACD,EAAA,EAAD,CAAUxG,QAAQ,OAAOyG,OAAO,WAElC,kBAACD,EAAA,EAAD,CACExG,QAAQ,OACRyG,OAAO,OACP3F,MAAO,CAAE6F,aAAc,UAEzB,kBAACH,EAAA,EAAD,CAAUxG,QAAQ,OAAOyG,OAAO,cCjH5CG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,mBCT1BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.c17729b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./DataIndicator.css\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nfunction DataIndicator({\r\n  indicateData: {\r\n    NewConfirmed,\r\n    TotalConfirmed,\r\n    NewDeaths,\r\n    TotalDeaths,\r\n    NewRecovered,\r\n    TotalRecovered,\r\n    date\r\n  },\r\n  currentCountry\r\n}) {\r\n  return (\r\n    <div className=\"DataIndicator\">\r\n      <Card className=\"confirmed\">\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            确诊\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            <CountUp\r\n              start={0}\r\n              end={TotalConfirmed}\r\n              duration={2}\r\n              separator=\",\"\r\n              gutterBottom\r\n            />\r\n          </Typography>\r\n\r\n          <Typography color=\"textSecondary\">新增</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp start={0} end={NewConfirmed} duration={2} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(date).toLocaleDateString()}\r\n          </Typography>\r\n          <Typography>{currentCountry || '全球'}的新冠病毒确诊数量</Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Card className=\"recoverd\">\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            康复\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            <CountUp\r\n              start={0}\r\n              end={TotalRecovered}\r\n              duration={2}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">新增</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp start={0} end={NewRecovered} duration={2} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(date).toLocaleDateString()}\r\n          </Typography>\r\n          <Typography>{currentCountry || '全球'}的新冠病毒康复数量</Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Card className=\"death\">\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            死亡\r\n          </Typography>\r\n\r\n          <Typography variant=\"h4\">\r\n            <CountUp start={0} end={TotalDeaths} duration={2} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">新增</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp start={0} end={NewDeaths} duration={2} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(date).toLocaleDateString()}\r\n          </Typography>\r\n          <Typography>{currentCountry || '全球'}的新冠病毒死亡数量</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataIndicator;\r\n","import React, { useState } from \"react\";\r\nimport \"./CountryPicker.css\";\r\nimport { FormControl, NativeSelect } from \"@material-ui/core\";\r\n\r\nfunction CountryPicker({ countries, changeCountry }) {\r\n  const [selectValue, setSelectValue] = useState(\"global\");\r\n  return (\r\n    <div className=\"CountryPicker\">\r\n      <FormControl style={{ width: \"100%\" }}>\r\n        <NativeSelect\r\n          onChange={e => changeCountry(e.target.value, setSelectValue)}\r\n          value={selectValue}\r\n        >\r\n          <option value=\"global\">全球</option>\r\n          {countries.map(({ name, slug }) => (\r\n            <option key={slug} value={slug}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Chart.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction Chart({ data }) {\r\n  const [dates, setDates] = useState([]);\r\n  const [confirmeds, setConfirmed] = useState([]);\r\n  const [recovereds, setRecovereds] = useState([]);\r\n  const [deaths, setDeaths] = useState([]);\r\n  useEffect(() => {\r\n    let dateArr = [],\r\n      confirmedArr = [],\r\n      recoveredArr = [],\r\n      deathArr = [];\r\n    data.forEach(({ date, Confirmed, Recovered, Deaths }) => {\r\n      dateArr.push(new Date(date).toLocaleDateString().slice(0,-5));\r\n      confirmedArr.push(Confirmed);\r\n      recoveredArr.push(Recovered);\r\n      deathArr.push(Deaths);\r\n    });\r\n    setDates(dateArr);\r\n    setConfirmed(confirmedArr);\r\n    setRecovereds(recoveredArr);\r\n    setDeaths(deathArr);\r\n  }, [data]);\r\n  return (\r\n    <div className=\"Chart\">\r\n      <Line\r\n        data={{\r\n          \r\n          labels:dates,\r\n          datasets:[\r\n            {\r\n              label: \"确诊\",\r\n              fill: true,\r\n              data: confirmeds,\r\n              backgroundColor: \"rgba(0,0,255,.2)\"\r\n            },\r\n            {\r\n              label: \"康复\",\r\n              fill: true,\r\n              data: recovereds,\r\n              backgroundColor: \"rgba(0,255,0,.2)\"\r\n            },\r\n            {\r\n              label: \"死亡\",\r\n              fill: true,\r\n              data: deaths,\r\n              backgroundColor: \"rgba(255,0,0,.2)\"\r\n            }\r\n          ]\r\n        }\r\n\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","export const fetchCountries = async () => {\r\n  return await fetch(\"https://api.covid19api.com/countries\")\r\n    .then(res => res.json())\r\n    .then(data =>\r\n      data\r\n        .map(country => {\r\n          return { name: country.Country, slug: country.Slug };\r\n        })\r\n        .sort((a, b) => {\r\n          if (a.name < b.name) return -1;\r\n          else if (a.name > b.name) return 1;\r\n          return 0;\r\n        })\r\n    );\r\n};\r\n\r\nexport const fetchDailyGlobalData = async () => {\r\n  return await fetch(\"https://api.covid19api.com/summary\")\r\n    .then(res => res.json())\r\n    .then(data => ({\r\n      NewConfirmed: data.Global.NewConfirmed,\r\n      TotalConfirmed: data.Global.TotalConfirmed,\r\n      NewDeaths: data.Global.NewDeaths,\r\n      TotalDeaths: data.Global.TotalDeaths,\r\n      NewRecovered: data.Global.NewRecovered,\r\n      TotalRecovered: data.Global.TotalRecovered,\r\n      date: data.Date\r\n    }));\r\n};\r\n\r\nexport const fetchByCountry = async country => {\r\n  return await fetch(`https://api.covid19api.com/total/country/${country}`)\r\n    .then(res => res.json())\r\n    .then(data =>\r\n      data.map(day => ({\r\n        Confirmed: day.Confirmed,\r\n        Deaths: day.Deaths,\r\n        Recovered: day.Recovered,\r\n        date: day.Date\r\n      }))\r\n    );\r\n};\r\nexport const fetchGlobalChartData = async () => {\r\n  return await fetch(\"https://covid19.mathdro.id/api/daily\")\r\n    .then(res => res.json())\r\n    .then(data => data.map(day => ({\r\n      Confirmed: day.totalConfirmed,\r\n      Recovered: day.totalRecovered,\r\n      Deaths: day.deaths.total,\r\n      date: day.reportDate\r\n    })));\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport covid19 from \"./image/covid-19.png\";\nimport DataIndicator from \"./DataIndicator/DataIndicator\";\nimport CountryPicker from \"./CountryPicker/CountryPicker\";\nimport Chart from \"./Chart/Chart\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport {\n  fetchCountries,\n  fetchDailyGlobalData,\n  fetchByCountry,\n  fetchGlobalChartData\n} from \"./Api\";\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: \"JGH\",\n    fontSize: 16\n  }\n});\n\nfunction App() {\n  const [currentCountry, setCurrentCountry] = useState(\"\");\n  const [chartData, setChartData] = useState([]);\n  const [globalChartData, setGlobalChartData] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [globalData, setGlobalData] = useState({});\n  const [indicateData, setIndicateData] = useState({});\n  useEffect(() => {\n    (async function() {\n      const [\n        fetchedCountries,\n        fetchedDailyGlobalData,\n        fetchedGlobalChartData\n      ] = await Promise.all([\n        fetchCountries(),\n        fetchDailyGlobalData(),\n        fetchGlobalChartData()\n      ]);\n      setCountries(fetchedCountries);\n      setGlobalData(fetchedDailyGlobalData);\n      setIndicateData(fetchedDailyGlobalData);\n      setGlobalChartData(fetchedGlobalChartData);\n      setChartData(fetchedGlobalChartData);\n    })();\n  }, []);\n\n  const setToGlobal = setSelectValue => {\n    setSelectValue(\"global\");\n    setCurrentCountry(\"\");\n    setIndicateData(globalData);\n    setChartData(globalChartData);\n  };\n\n  const changeCountry = async (country, setSelectValue) => {\n    if (country === \"global\") {\n      return setToGlobal(setSelectValue);\n    }\n    const fetchedCountryData = await fetchByCountry(country);\n    if (fetchedCountryData.length < 1) {\n      setToGlobal(setSelectValue);\n      return alert(\"此国家暂无数据。\");\n    }\n\n    setChartData(fetchedCountryData);\n\n    const foundCountry = countries.find(item => item.slug === country);\n    setCurrentCountry(foundCountry.name);\n    setSelectValue(foundCountry.slug);\n    const today = fetchedCountryData[fetchedCountryData.length - 1];\n    const yesterday = fetchedCountryData[fetchedCountryData.length - 2];\n    setIndicateData({\n      NewConfirmed: today.Confirmed - yesterday.Confirmed,\n      TotalConfirmed: today.Confirmed,\n      NewDeaths: today.Deaths - yesterday.Deaths,\n      TotalDeaths: today.Deaths,\n      NewRecovered: today.Recovered - yesterday.Recovered,\n      TotalRecovered: today.Recovered,\n      date: today.date\n    });\n  };\n\n  return (\n    <MuiThemeProvider theme={THEME}>\n      <div className=\"App\">\n        {indicateData.NewConfirmed ? (\n          <>\n            <img src={covid19} alt=\"covid-19\" />\n            <DataIndicator\n              indicateData={indicateData}\n              currentCountry={currentCountry}\n            />\n            <CountryPicker\n              countries={countries}\n              changeCountry={changeCountry}\n            />\n            <Chart data={chartData} />\n          </>\n        ) : (\n          <div className=\"skeleton-wrap\">\n            <Skeleton\n              variant=\"rect\"\n              width=\"100%\"\n              height=\"150px\"\n              style={{ margin: \"1rem 0\" }}\n            />\n            <div className=\"cards\" style={{ marginBottom: \"1rem\" }}>\n              <Skeleton variant=\"rect\" height=\"200px\" />\n              <Skeleton variant=\"rect\" height=\"200px\" />\n              <Skeleton variant=\"rect\" height=\"200px\" />\n            </div>\n            <Skeleton\n              variant=\"rect\"\n              height=\"50px\"\n              style={{ marginBottom: \"1rem\" }}\n            />\n            <Skeleton variant=\"rect\" height=\"500px\" />\n          </div>\n        )}\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/covid-19.f88f6468.png\";"],"sourceRoot":""}