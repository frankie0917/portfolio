{"version":3,"sources":["store/store.tsx","components/Board.tsx","components/NumberInput.tsx","components/ColumnIndicator.tsx","components/RowIndicator.tsx","App.tsx","index.tsx"],"names":["Indicator","prop","size","maxCellSize","parent","type","value","makeAutoObservable","this","row","addIndicator","val","playing","addRowToCurrent","addColToCurrent","length","contentHeight","contentWidth","push","index","deleteRowToCurrent","deleteColToCurrent","splice","Index","Math","max","cellIndex","RootStore","currentRows","currentCols","current","success","colIndicators","rowIndicators","rowValueToIndicator","colValueToIndicator","num","i","generateArrangement","indicator","width","includes","Array","fill","spaces","arr","ans","list","slice","j","arrangements","entries","rowIndex","console","log","res","validate","set","board","colIndicator","cell","currentCol","colIndex","filter","it","col","JSON","stringify","verifyBoard","changeDepth","nextSet","undefined","setCurrentCell","alert","rowIndicator","currentRow","boardToIndicators","RootStoreContext","createContext","RootStoreProvider","children","Provider","useRootStore","useContext","Board","observer","mode","id","className","style","height","gridTemplateRows","join","map","_","gridTemplateColumns","CellItem","store","onClick","fontSize","NumberInput","setValue","props","onChange","e","parseInt","target","replace","isNaN","ColumnIndicator","useState","preview","setPreview","onMouseEnter","onMouseLeave","transform","v","Col","position","right","top","isValid","useMemo","left","addIndicatorCell","deleteIndicator","setIndicatorCell","deleteIndicatorCell","RowIndicator","Row","bottom","display","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72e422cb.chunk.js","sourcesContent":["import { makeAutoObservable, toJS } from \"mobx\";\r\nimport { createContext, PropsWithChildren, useContext } from \"react\";\r\n\r\nexport type Cell = \"O\" | \"X\" | \"-\";\r\n\r\nexport type Board = Cell[][];\r\n\r\nexport type IndicatorType = \"row\" | \"col\";\r\n\r\nexport const minIdicatorSize = 40;\r\n\r\nexport const minIdicatorCellSize = 16;\r\n\r\ninterface IndicatorProp {\r\n  parent: RootStore;\r\n  type: IndicatorType;\r\n  value?: number[][];\r\n}\r\n\r\nexport class Indicator {\r\n  constructor(prop: IndicatorProp) {\r\n    makeAutoObservable(this);\r\n    this.parent = prop.parent;\r\n    this.type = prop.type;\r\n    if (prop.value) {\r\n      for (const row of prop.value) {\r\n        this.addIndicator(row);\r\n      }\r\n    }\r\n  }\r\n  size: number = 100;\r\n  maxCellSize: number = 0;\r\n  parent: RootStore;\r\n  type: IndicatorType;\r\n  value: number[][] = [];\r\n\r\n  addIndicator(val: number[]) {\r\n    if (this.parent.playing) return;\r\n    if (this.type === \"row\") {\r\n      this.parent.addRowToCurrent();\r\n    } else {\r\n      this.parent.addColToCurrent();\r\n    }\r\n\r\n    if (this.value.length > 9) {\r\n      if (this.type === \"row\") {\r\n        this.parent.contentHeight += minIdicatorSize;\r\n      } else {\r\n        this.parent.contentWidth += minIdicatorSize;\r\n      }\r\n    }\r\n    this.value.push(val);\r\n  }\r\n\r\n  deleteIndicator(index: number) {\r\n    if (this.parent.playing) return;\r\n    if (this.type === \"row\") {\r\n      this.parent.deleteRowToCurrent(index);\r\n    } else {\r\n      this.parent.deleteColToCurrent(index);\r\n    }\r\n\r\n    if (this.value.length > 9) {\r\n      if (this.type === \"row\") {\r\n        this.parent.contentHeight -= minIdicatorSize;\r\n      } else {\r\n        this.parent.contentWidth -= minIdicatorSize;\r\n      }\r\n    }\r\n    this.value.splice(index, 1);\r\n  }\r\n\r\n  addIndicatorCell(Index: number) {\r\n    if (this.parent.playing) return;\r\n    this.value[Index].push(1);\r\n    this.maxCellSize = Math.max(this.maxCellSize, this.value[Index].length);\r\n\r\n    if (this.maxCellSize > 5) {\r\n      this.size += minIdicatorCellSize;\r\n    }\r\n  }\r\n\r\n  deleteIndicatorCell(index: number, cellIndex: number) {\r\n    if (this.parent.playing) return;\r\n    this.value[index].splice(cellIndex, 1);\r\n    this.maxCellSize = Math.max(this.maxCellSize, this.value[index].length);\r\n\r\n    if (this.maxCellSize > 5) {\r\n      if (this.size - minIdicatorCellSize > 100) {\r\n        this.size -= minIdicatorCellSize;\r\n      } else {\r\n        this.size = 100;\r\n      }\r\n    }\r\n  }\r\n\r\n  setIndicatorCell(Index: number, cellIndex: number, value: number) {\r\n    if (this.parent.playing) return;\r\n    this.value[Index][cellIndex] = value;\r\n  }\r\n}\r\n\r\nfunction boardToIndicators(board: Board) {\r\n  let colIndicator: number[][] = [];\r\n  let rowIndicator: number[][] = [];\r\n\r\n  for (const [rowIndex, row] of board.entries()) {\r\n    for (const [cellIndex, cell] of row.entries()) {\r\n      if (!colIndicator[cellIndex]) {\r\n        colIndicator[cellIndex] = [];\r\n      }\r\n\r\n      if (!rowIndicator[rowIndex]) {\r\n        rowIndicator[rowIndex] = [];\r\n      }\r\n\r\n      const currentCol = colIndicator[cellIndex];\r\n      const currentRow = rowIndicator[rowIndex];\r\n\r\n      if (cell === \"O\") {\r\n        if (rowIndex === 0) {\r\n          currentCol.push(1);\r\n        }\r\n\r\n        if (rowIndex > 0) {\r\n          currentCol[currentCol.length - 1] += 1;\r\n        }\r\n\r\n        if (cellIndex === 0) {\r\n          currentRow.push(1);\r\n        }\r\n\r\n        if (cellIndex > 0) {\r\n          currentRow[currentRow.length - 1] += 1;\r\n        }\r\n      } else {\r\n        currentCol.push(0);\r\n        currentRow.push(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const [colIndex, currentCol] of colIndicator.entries()) {\r\n    colIndicator[colIndex] = currentCol.filter((it) => it !== 0);\r\n    if (colIndicator[colIndex].length === 0) {\r\n      colIndicator[colIndex].push(0);\r\n    }\r\n  }\r\n\r\n  for (const [rowIndex, currentRow] of rowIndicator.entries()) {\r\n    rowIndicator[rowIndex] = currentRow.filter((it) => it !== 0);\r\n    if (rowIndicator[rowIndex].length === 0) {\r\n      rowIndicator[rowIndex].push(0);\r\n    }\r\n  }\r\n  return {\r\n    rowIndicator,\r\n    colIndicator,\r\n  };\r\n}\r\n\r\nexport class RootStore {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  contentHeight: number = 500;\r\n  contentWidth: number = 500;\r\n\r\n  currentRows: number = 0;\r\n  currentCols: number = 0;\r\n  current: Board = [];\r\n  success: Board = [];\r\n  colIndicators: Indicator = new Indicator({\r\n    parent: this,\r\n    type: \"col\",\r\n    value: [[2], [4], [4], [4], [2]],\r\n  });\r\n  rowIndicators: Indicator = new Indicator({\r\n    parent: this,\r\n    type: \"row\",\r\n    value: [[1, 1], [5], [5], [3], [1]],\r\n  });\r\n\r\n  rowValueToIndicator: number[][] = [];\r\n  colValueToIndicator: number[][] = [];\r\n\r\n  playing = false;\r\n\r\n  setBoard(num: number) {\r\n    for (let i = 0; i < num; i++) {\r\n      this.rowIndicators.addIndicator([1]);\r\n      this.colIndicators.addIndicator([1]);\r\n    }\r\n  }\r\n\r\n  solve() {\r\n    const generateArrangement = (\r\n      indicator: number[],\r\n      width: number\r\n    ): Cell[][] => {\r\n      if (indicator.includes(0)) return [Array(width).fill(\"-\")];\r\n      if (indicator[0] > width) return [];\r\n\r\n      const spaces = width - indicator[0]; //spaces = 2 means possible starting indexes are [0,1,2]\r\n      if (indicator.length === 1) {\r\n        //this is special case\r\n        const arr = [];\r\n        for (let i = 0; i < spaces + 1; i++) {\r\n          arr.push([\r\n            ...Array(i).fill(\"-\"),\r\n            ...Array(indicator[0]).fill(\"O\"),\r\n            ...Array(spaces - i).fill(\"-\"),\r\n          ]);\r\n        }\r\n        return arr;\r\n      }\r\n\r\n      const ans = [];\r\n      for (let i = 0; i < spaces; i++) {\r\n        const list = generateArrangement(indicator.slice(1), spaces - i - 1);\r\n        for (let j = 0; j < list.length; j++) {\r\n          ans.push([\r\n            ...Array(i).fill(\"-\"),\r\n            ...Array(indicator[0]).fill(\"O\"),\r\n            \"-\",\r\n            ...list[j],\r\n          ]);\r\n        }\r\n      }\r\n\r\n      return ans;\r\n    };\r\n    // generate arragements\r\n    const arrangements: Cell[][][] = [];\r\n\r\n    for (const [rowIndex] of this.current.entries()) {\r\n      arrangements[rowIndex] = generateArrangement(\r\n        this.rowIndicators.value[rowIndex],\r\n        this.current[0].length\r\n      );\r\n    }\r\n    console.log(\"arrangements\", arrangements);\r\n\r\n    const verifyBoard = (board: Board) => {\r\n      // generate col indicator\r\n      let colIndicator: number[][] = [];\r\n\r\n      for (const [rowIndex, row] of board.entries()) {\r\n        for (const [cellIndex, cell] of row.entries()) {\r\n          if (!colIndicator[cellIndex]) {\r\n            colIndicator[cellIndex] = [];\r\n          }\r\n\r\n          const currentCol = colIndicator[cellIndex];\r\n\r\n          if (cell === \"O\") {\r\n            if (rowIndex === 0) {\r\n              currentCol.push(1);\r\n            }\r\n\r\n            if (rowIndex > 0) {\r\n              currentCol[currentCol.length - 1] += 1;\r\n            }\r\n          } else {\r\n            currentCol.push(0);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const [colIndex, currentCol] of colIndicator.entries()) {\r\n        colIndicator[colIndex] = currentCol.filter((it) => it !== 0);\r\n        if (colIndicator[colIndex].length === 0) {\r\n          colIndicator[colIndex].push(0);\r\n        }\r\n      }\r\n\r\n      // validate each col\r\n      for (const [i, col] of colIndicator.entries()) {\r\n        if (\r\n          JSON.stringify(this.colIndicators.value[i]) !== JSON.stringify(col)\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    // validate\r\n    const validate = (set: number[]): Board | false => {\r\n      console.log(\"set\", set);\r\n      const board: Board = [];\r\n      for (const [i, num] of set.entries()) {\r\n        board.push(arrangements[i][num]);\r\n      }\r\n      if (verifyBoard(board)) {\r\n        return board;\r\n      }\r\n      let changeDepth = 0;\r\n      let nextSet: number[] = [];\r\n      for (let i = set.length - 1; i >= 0; i--) {\r\n        nextSet[i] = set[i];\r\n        if (\r\n          set[i + 1] === undefined ||\r\n          set[i + 1] === arrangements[i + 1].length - 1\r\n        ) {\r\n          if (i === 0 && set[i] === arrangements[0].length - 1) {\r\n            return false;\r\n          }\r\n          if (changeDepth + i === set.length - 1) {\r\n            nextSet[i] = set[i] + 1;\r\n          }\r\n          if (set[i] === arrangements[i].length - 1) {\r\n            nextSet[i] = 0;\r\n          }\r\n          changeDepth++;\r\n        }\r\n      }\r\n      return validate(nextSet);\r\n    };\r\n    const res = validate(Array(arrangements.length).fill(0));\r\n\r\n    if (res !== false) {\r\n      for (const [rowIndex, row] of res.entries()) {\r\n        for (const [cellIndex, cell] of row.entries()) {\r\n          this.setCurrentCell(rowIndex, cellIndex, cell);\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"无解法\");\r\n    }\r\n  }\r\n\r\n  addRowToCurrent(cell?: Cell) {\r\n    if (this.playing) return;\r\n\r\n    this.currentRows++;\r\n\r\n    this.current.push(Array(this.currentCols).fill(cell || \"-\"));\r\n  }\r\n\r\n  addColToCurrent(cell?: Cell) {\r\n    if (this.playing) return;\r\n\r\n    this.currentCols++;\r\n    for (const row of this.current) {\r\n      row.push(cell || \"-\");\r\n    }\r\n  }\r\n\r\n  deleteRowToCurrent(index: number) {\r\n    if (this.playing) return;\r\n\r\n    this.currentRows--;\r\n    this.current.splice(index, 1);\r\n  }\r\n\r\n  deleteColToCurrent(index: number) {\r\n    if (this.playing) return;\r\n\r\n    this.currentCols--;\r\n    for (const row of this.current) {\r\n      row.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  setCurrentCell(rowIndex: number, colIndex: number, value: Cell) {\r\n    this.current[rowIndex][colIndex] = value;\r\n    const { colIndicator, rowIndicator } = boardToIndicators(this.current);\r\n    this.rowValueToIndicator = rowIndicator;\r\n    this.colValueToIndicator = colIndicator;\r\n  }\r\n}\r\n\r\nexport const RootStoreContext = createContext<RootStore>(new RootStore());\r\n\r\nexport const RootStoreProvider: React.FC<PropsWithChildren<{}>> = ({\r\n  children,\r\n}) => {\r\n  return (\r\n    <RootStoreContext.Provider value={new RootStore()}>\r\n      {children}\r\n    </RootStoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRootStore = () => useContext(RootStoreContext);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Cell, useRootStore } from \"../store/store\";\r\n\r\nexport type Mode = \"preview\" | \"normal\";\r\n\r\nexport const Board: React.FC<{ mode?: Mode }> = observer(({ mode }) => {\r\n  const {\r\n    colIndicators,\r\n    rowIndicators,\r\n    current,\r\n    contentWidth,\r\n    contentHeight,\r\n  } = useRootStore();\r\n  return (\r\n    <div\r\n      id=\"content\"\r\n      className=\"border-t border-l grid border-gray-400 bg-gray-100\"\r\n      style={{\r\n        height: mode === \"preview\" ? contentHeight / 3 : contentHeight,\r\n        width: mode === \"preview\" ? contentWidth / 3 : contentWidth,\r\n        gridTemplateRows: Array(rowIndicators.value.length)\r\n          .fill(\"1fr\")\r\n          .join(\" \"),\r\n      }}\r\n    >\r\n      {rowIndicators.value.map((_, rowIndex) => (\r\n        <div\r\n          key={rowIndex}\r\n          className=\"grid\"\r\n          style={{\r\n            gridTemplateColumns: Array(colIndicators.value.length)\r\n              .fill(\"1fr\")\r\n              .join(\" \"),\r\n          }}\r\n        >\r\n          {colIndicators.value.map((_, cellIndex) => (\r\n            <CellItem\r\n              key={cellIndex}\r\n              rowIndex={rowIndex}\r\n              cellIndex={cellIndex}\r\n              mode={mode || \"normal\"}\r\n              value={current[rowIndex][cellIndex]}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst CellItem: React.FC<{\r\n  value: Cell;\r\n  rowIndex: number;\r\n  cellIndex: number;\r\n  mode: Mode;\r\n}> = observer(({ value, cellIndex, rowIndex, mode }) => {\r\n  const store = useRootStore();\r\n\r\n  const className = \" w-full h-full\";\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        mode === \"normal\" && \"border\"\r\n      } h-full w-full cursor-pointer`}\r\n      onClick={() => {\r\n        store.setCurrentCell(\r\n          rowIndex,\r\n          cellIndex,\r\n          value === \"-\" ? \"O\" : value === \"O\" ? \"X\" : \"-\"\r\n        );\r\n      }}\r\n    >\r\n      {value === \"-\" ? (\r\n        <div className={className}></div>\r\n      ) : value === \"O\" ? (\r\n        <div className={\"bg-gray-600\" + className}></div>\r\n      ) : (\r\n        <div\r\n          style={{ fontSize: mode === \"normal\" ? 25 : 10 }}\r\n          className={\r\n            \"flex justify-center items-center text-gray-600\" + className\r\n          }\r\n        >\r\n          X\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nconst NumberInput = ({\r\n  value,\r\n  setValue,\r\n  ...props\r\n}: {\r\n  value: string | number | readonly string[];\r\n  setValue: (value: number) => void;\r\n} & React.DetailedHTMLProps<\r\n  React.InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>) => {\r\n  return (\r\n    <input\r\n      value={value}\r\n      onChange={(e) => {\r\n        const val = parseInt(e.target.value.replace(/\\D/g, \"\"));\r\n\r\n        if (!isNaN(val)) {\r\n          setValue(val);\r\n        } else {\r\n          setValue(0);\r\n        }\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { useRootStore } from \"../store/store\";\r\nimport { Board } from \"./Board\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport const ColumnIndicator = observer(() => {\r\n  const store = useRootStore();\r\n  const {\r\n    colIndicators: { value, size },\r\n    rowIndicators,\r\n    contentWidth,\r\n  } = store;\r\n  const [preview, setPreview] = useState(false);\r\n\r\n  return (\r\n    <div className=\"flex flex-row relative\" style={{ height: size }}>\r\n      <div\r\n        style={{ width: rowIndicators.size }}\r\n        className=\"flex justify-center items-center relative\"\r\n        onMouseEnter={() => setPreview(true)}\r\n        onMouseLeave={() => setPreview(false)}\r\n      >\r\n        预览\r\n        {preview && (\r\n          <div\r\n            className=\"absolute bottom-1/2 z-20 right-1/2 border-2 border-red-400\"\r\n            style={{ transform: \"translate(100%,100%)\" }}\r\n          >\r\n            <Board mode=\"preview\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div\r\n        className=\"h-full grid bg-gray-700\"\r\n        style={{\r\n          width: contentWidth,\r\n          gridTemplateColumns: Array(value.length).fill(\"1fr\").join(\" \"),\r\n        }}\r\n      >\r\n        {value.map((v, i) => (\r\n          <Col value={v} index={i} key={i} />\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          right: 0,\r\n          top: \"50%\",\r\n          transform: \"translate(100%,-50%)\",\r\n        }}\r\n        className=\"cursor-pointer text-center flex flex-row items-center justify-center bg-gray-600 border-l w-6 h-full\"\r\n        onClick={() => store.colIndicators.addIndicator([1])}\r\n      >\r\n        添加列\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Col: React.FC<{ value: number[]; index: number }> = observer(\r\n  ({ value, index }) => {\r\n    const store = useRootStore();\r\n    const current = store.colValueToIndicator[index];\r\n    const isValid = useMemo(() => {\r\n      return JSON.stringify(current) === JSON.stringify(value);\r\n    }, [current, value]);\r\n    return (\r\n      <div\r\n        className={`${isValid && \"bg-gray-500\"} border-l flex flex-col`}\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        <div className=\"bg-gray-400 text-gray-600 text-center flex flex-row items-center\">\r\n          <div\r\n            className=\"h-4 flex justify-center items-center bg-gray-300\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: 0,\r\n              right: 0,\r\n              top: -17,\r\n            }}\r\n          >\r\n            {index + 1}\r\n          </div>\r\n          <div\r\n            className=\"flex flex-row flex-1 justify-center items-center cursor-pointer h-full text-white\"\r\n            onClick={() => store.colIndicators.addIndicatorCell(index)}\r\n          >\r\n            +\r\n          </div>\r\n          <div\r\n            className=\"flex flex-row flex-1 justify-center items-center cursor-pointer h-full border-l text-white\"\r\n            onClick={() => store.colIndicators.deleteIndicator(index)}\r\n          >\r\n            -\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col justify-end mt-auto\">\r\n          {value.map((_, i) => (\r\n            <div\r\n              key={i}\r\n              style={{ height: 15 }}\r\n              className=\"flex flex-row hover:bg-gray-400 group overflow-hidden relative colGroup\"\r\n            >\r\n              <NumberInput\r\n                key={i}\r\n                value={store.colIndicators.value[index][i]}\r\n                setValue={(val) =>\r\n                  store.colIndicators.setIndicatorCell(index, i, val)\r\n                }\r\n                className=\"bg-transparent text-center group-hover:text-gray-800 w-full h-full\"\r\n              />\r\n              <div\r\n                onClick={() => {\r\n                  if (value.length > 1) {\r\n                    store.colIndicators.deleteIndicatorCell(index, i);\r\n                  }\r\n                }}\r\n                className={`${\r\n                  value.length > 1 && \"xBtn\"\r\n                } bg-red-900 w-3 absolute -right-6 flex justify-center hover:bg-red-600 z-10 cursor-pointer items-center h-full`}\r\n              >\r\n                x\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useRootStore } from \"../store/store\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport const RowIndicator = observer(() => {\r\n  const store = useRootStore();\r\n  const {\r\n    rowIndicators: { value, size },\r\n  } = store;\r\n\r\n  return (\r\n    <div\r\n      className=\"ml-auto w-full h-full bg-gray-700\"\r\n      style={{\r\n        width: size,\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"h-full grid\"\r\n        style={{ gridTemplateRows: Array(value.length).fill(\"1fr\").join(\" \") }}\r\n      >\r\n        {value.map((row, index) => (\r\n          <Row index={index} row={row} key={index} />\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          bottom: 0,\r\n          display: \"block\",\r\n          transform: \"translate(-50%,100%)\",\r\n        }}\r\n        className=\" text-center border-t bg-gray-600 cursor-pointer h-6 w-full\"\r\n        onClick={() => store.rowIndicators.addIndicator([1])}\r\n      >\r\n        添加行\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Row: React.FC<{ index: number; row: number[] }> = observer(\r\n  ({ row, index }) => {\r\n    const store = useRootStore();\r\n    const current = store.rowValueToIndicator[index];\r\n    const isValid = useMemo(() => {\r\n      return JSON.stringify(current) === JSON.stringify(row);\r\n    }, [current, row]);\r\n    return (\r\n      <div\r\n        className={`${\r\n          isValid && \"bg-gray-500\"\r\n        } flex flex-row justify-between border-t h-full`}\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        <div className=\"bg-gray-400 w-4 h-full text-gray-600 text-center flex flex-col justify-center items-center\">\r\n          <div\r\n            className=\"w-4 flex justify-center items-center bg-gray-300\"\r\n            style={{ position: \"absolute\", top: 0, bottom: 0, left: -17 }}\r\n          >\r\n            {index + 1}\r\n          </div>\r\n          <div\r\n            className=\"flex flex-row w-full flex-1 justify-center items-center cursor-pointer text-white\"\r\n            style={{ height: 5 }}\r\n            onClick={() => store.rowIndicators.addIndicatorCell(index)}\r\n          >\r\n            +\r\n          </div>\r\n          <div\r\n            className=\"flex flex-row w-full flex-1 justify-center items-center cursor-pointer border-t text-white\"\r\n            style={{ height: 5 }}\r\n            onClick={() => store.rowIndicators.deleteIndicator(index)}\r\n          >\r\n            -\r\n          </div>\r\n        </div>\r\n        <div className=\"flex\">\r\n          {row.map((_, i) => (\r\n            <div\r\n              key={i}\r\n              style={{ width: 15 }}\r\n              className=\"h-full relative hover:bg-gray-400 rowGroup group overflow-hidden \"\r\n            >\r\n              <NumberInput\r\n                className=\"bg-transparent flex-1 text-center group-hover:text-gray-800 w-full h-full\"\r\n                value={row[i]}\r\n                setValue={(val) =>\r\n                  store.rowIndicators.setIndicatorCell(index, i, val)\r\n                }\r\n              />\r\n              <div\r\n                onClick={() => {\r\n                  if (row.length > 1) {\r\n                    store.rowIndicators.deleteIndicatorCell(index, i);\r\n                  }\r\n                }}\r\n                className={`${\r\n                  row.length > 1 && \"xBtn\"\r\n                } bg-red-900 w-full absolute right-0 -bottom-6 flex justify-center hover:bg-red-600 z-10 cursor-pointer items-center h-3`}\r\n              >\r\n                x\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Board } from \"./components/Board\";\nimport { ColumnIndicator } from \"./components/ColumnIndicator\";\nimport { RowIndicator } from \"./components/RowIndicator\";\nimport { useRootStore } from \"./store/store\";\n\nconst App = observer(() => {\n  const store = useRootStore();\n  const {\n    contentHeight,\n    contentWidth,\n    rowIndicators,\n    colIndicators,\n    playing,\n  } = store;\n  return (\n    <div className=\"my-20\">\n      <h1 className=\"text-5xl text-center my-10\">no2g</h1>\n      {/* <div className=\"my-10 flex flex-row justify-center items-center\">\n        <div\n          onClick={() => {\n            store.solve();\n          }}\n          className=\"bg-green-700 text-white p-4 w-24 flex cursor-pointer justify-center items-center\"\n        >\n          {playing ? \"进行中\" : \"开始\"}\n        </div>\n      </div> */}\n      <div\n        id=\"app\"\n        className=\"mx-auto text-white bg-gray-800\"\n        style={{\n          width: contentWidth + rowIndicators.size,\n          height: contentHeight + colIndicators.size,\n          fontSize: 12,\n        }}\n      >\n        <ColumnIndicator />\n        <div style={{ height: contentHeight }} className=\"flex flex-row\">\n          <RowIndicator />\n          <Board />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { RootStoreProvider } from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootStoreProvider>\n      <App />\n    </RootStoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}